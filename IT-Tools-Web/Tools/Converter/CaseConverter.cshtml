@{  
   ViewData["Title"] = "Case converter";  
   Layout = (string)(ViewData["Layout"] ?? "_Layout");  
}
<h1>@ViewData["Title"]</h1>

<p>Transform the case of a string and choose between different formats</p>
<div class="container">
    <div class="card mx-auto" style="max-width: 700px;">
        <div class="card-body">
            <h5 class="mb-3">Your string:</h5>
            <input type="text" id="inputText" class="form-control mb-4" value="lorem ipsum dolor sit amet" oninput="updateCases()">

            <div id="results">
                <!-- Case results will be inserted here -->
            </div>
        </div>
    </div>
</div>

<script>
    const caseFormats = {
      "Lowercase": str => str.toLowerCase(),
      "Uppercase": str => str.toUpperCase(),
      "Camelcase": str => str.replace(/(?:^\w|[A-Z]|\b\w)/g, (w, i) =>
        i === 0 ? w.toLowerCase() : w.toUpperCase()).replace(/\s+/g, ''),
      "Capitalcase": str => str.replace(/\b\w/g, c => c.toUpperCase()),
      "Constantcase": str => str.toUpperCase().replace(/\s+/g, '_'),
      "Dotcase": str => str.toLowerCase().replace(/\s+/g, '.'),
      "Headercase": str => str.replace(/\b\w/g, c => c.toUpperCase()).replace(/\s+/g, '-'),
      "Nocase": str => str.toLowerCase(),
      "Paramcase": str => str.toLowerCase().replace(/\s+/g, '-'),
      "Pascalcase": str => str.replace(/\w+/g, w => w.charAt(0).toUpperCase() + w.slice(1).toLowerCase()).replace(/\s+/g, ''),
      "Pathcase": str => str.toLowerCase().replace(/\s+/g, '/'),
      "Sentencecase": str => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase(),
      "Snakecase": str => str.toLowerCase().replace(/\s+/g, '_'),
      "Mockingcase": str => str.split('').map((c, i) =>
        i % 2 ? c.toUpperCase() : c.toLowerCase()).join('')
    };

    function updateCases() {
      const text = document.getElementById('inputText').value;
      const results = document.getElementById('results');
      results.innerHTML = '';

      for (let [label, fn] of Object.entries(caseFormats)) {
        const value = fn(text);
        const row = document.createElement('div');
        row.className = 'mb-2 d-flex align-items-center';

        row.innerHTML = `
          <label class="form-label col-3 mb-0">${label}:</label>
          <input type="text" class="form-control me-2" value="${value}" readonly>
          <button class="copy-btn" onclick="copyToClipboard(this)">📋</button>
        `;

        results.appendChild(row);
      }
    }

    function copyToClipboard(btn) {
      const input = btn.parentElement.querySelector('input');
      navigator.clipboard.writeText(input.value);
      btn.textContent = '✅';
      setTimeout(() => btn.textContent = '📋', 1500);
    }

    // Initial render
    updateCases();
</script>