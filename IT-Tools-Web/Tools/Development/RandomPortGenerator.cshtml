@{
    ViewData["Title"] = "Random port generator";
    Layout = (string)(ViewData["Layout"] ?? "_Layout");
}

<h1>@ViewData["Title"]</h1>
@inject IHttpContextAccessor HttpContextAccessor

@if (HttpContextAccessor.HttpContext.Session.GetString("UserType") != null)
{
    <button class="btn btn-outline-dark my-2" onclick="addToFavorite(@ViewData["ToolId"])">Add To Favorite</button>
}
else
{

}

<script>
    function addToFavorite(toolId) {
        fetch('/Tool/AddToFavorite', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ toolId: toolId })
        })
        .then(response => {
            if (response.ok) {
                alert('Tool added to favorites successfully!');
            } else {
                response.text().then(text => alert(text));
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while adding the tool to favorites.');
        });
    }
</script>
<p>Generate random port numbers outside of the range of “known” ports (0–1023).</p>

<div class="container-sm my-4 p-4 border rounded bg-light text-center" style="max-width: 600px;">

    <!-- Port Display -->
    <div class="mb-4">
        <div id="port-display" class="port display-5 fw-semibold bg-white border rounded py-2">
            60181
        </div>
    </div>

    <!-- Buttons -->
    <div class="d-flex justify-content-center gap-3">
        <button class="btn btn-outline-primary" id="copy-button">Copy</button>
        <button class="btn btn-outline-secondary" onclick="generatePort()">Refresh</button>
    </div>

    <!-- Alert Box -->
    <div id="copy-alert" class="alert alert-success alert-dismissible fade show position-fixed bottom-0 m-3" role="alert" style="display: none; z-index: 9999;">
        Token copied to clipboard!
    </div>
</div>

<script>
    function generatePort() {
        const port = Math.floor(Math.random() * (65535 - 1024 + 1)) + 1024;
        document.getElementById('port-display').textContent = port;
    }

    document.getElementById('copy-button').addEventListener('click', function () {
        const port = document.getElementById('port-display').textContent;
        navigator.clipboard.writeText(port).then(() => {
            const alertBox = document.getElementById('copy-alert');
            alertBox.style.display = 'block';
            setTimeout(() => {
                alertBox.style.display = 'none';
            }, 3000);
        });
    });

    // Generate on load
    window.addEventListener("DOMContentLoaded", generatePort);
</script>
