@{
    ViewData["Title"] = "Token Generator";
    Layout = (string)(ViewData["Layout"] ?? "_Layout");
}
<h1>@ViewData["Title"]</h1>

<p>Generate random string with the chars you want, uppercase or lowercase letters, numbers and/or symbols.</p>


<div class="token-generator-container container-sm p-4 border rounded shadow-sm bg-light" style="max-width: 600px;">
    <div class="options mb-3">
        <div class="row justify-content-center">
            <div class="col-6 mb-2">
                <div class="d-flex justify-content-between align-items-center">
                    <label class="form-check-label" for="uppercase">Upper case (ABC...)</label>
                    <div class="form-check form-switch m-0">
                        <input class="form-check-input" type="checkbox" id="uppercase" checked>
                    </div>
                </div>
            </div>
            <div class="col-6 mb-2">
                <div class="d-flex justify-content-between align-items-center">
                    <label class="form-check-label" for="numbers">Numbers (123...)</label>
                    <div class="form-check form-switch m-0">
                        <input class="form-check-input" type="checkbox" id="numbers" checked>
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-6 mb-2">
                <div class="d-flex justify-content-between align-items-center">
                    <label class="form-check-label" for="lowercase">Lower case (abc...)</label>
                    <div class="form-check form-switch m-0">
                        <input class="form-check-input" type="checkbox" id="lowercase" checked>
                    </div>
                </div>
            </div>
            <div class="col-6 mb-2">
                <div class="d-flex justify-content-between align-items-center">
                    <label class="form-check-label" for="symbols">Symbols (!-...)</label>
                    <div class="form-check form-switch m-0">
                        <input class="form-check-input" type="checkbox" id="symbols">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="length-slider mb-3">
        <label for="length" class="form-label">Length: <span id="length-value">64</span></label>
        <input type="range" class="form-range" id="length" min="1" max="128" value="64" />
    </div>

    <div class="token-display mb-3">
        <textarea id="token-output" class="form-control" rows="4" style="resize: vertical; width: 100%;"></textarea>
    </div>

    <div class="actions d-flex gap-2">
        <button id="copy-button" class="btn btn-outline-primary">Copy</button>
        <button id="refresh-button" class="btn btn-outline-success">Refresh</button>
    </div>

    <div id="copy-alert" class="alert alert-success alert-dismissible fade show position-fixed bottom-0 m-3" role="alert" style="display: none; z-index: 9999;">
        Token copied to clipboard!
    </div>

</div>

<script>
    function generateToken() {
        const useUppercase = document.getElementById('uppercase').checked;
        const useNumbers = document.getElementById('numbers').checked;
        const useLowercase = document.getElementById('lowercase').checked;
        const useSymbols = document.getElementById('symbols').checked;
        const length = parseInt(document.getElementById('length').value, 10);

        const upperChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        const numberChars = "0123456789";
        const lowerChars = "abcdefghijklmnopqrstuvwxyz";
        const symbolChars = "@@!#$%^&*()-_=+[]{}|;:',.<>?/";

        let charPool = "";
        if (useUppercase) charPool += upperChars;
        if (useNumbers) charPool += numberChars;
        if (useLowercase) charPool += lowerChars;
        if (useSymbols) charPool += symbolChars;

        if (charPool.length === 0) {
            document.getElementById('token-output').value = "Please select at least one option.";
            return;
        }

        let token = "";
        for (let i = 0; i < length; i++) {
            token += charPool.charAt(Math.floor(Math.random() * charPool.length));
        }

        document.getElementById('token-output').value = token;
    }

    window.addEventListener('DOMContentLoaded', generateToken);

    ['uppercase', 'numbers', 'lowercase', 'symbols', 'length'].forEach(id => {
        document.getElementById(id).addEventListener('input', function () {
            document.getElementById('length-value').textContent = document.getElementById('length').value;
            generateToken();
        });
    });

    document.getElementById('copy-button').addEventListener('click', function () {
        const tokenOutput = document.getElementById('token-output');
        tokenOutput.select();
        document.execCommand('copy');

        const alertBox = document.getElementById('copy-alert');
        alertBox.style.display = 'block'; 
        setTimeout(() => {
            alertBox.style.display = 'none';
        }, 3000);
    });


    document.getElementById('refresh-button').addEventListener('click', generateToken);
</script>